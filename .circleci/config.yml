version: 2.0
jobs:
  build-app:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.2
    steps:
      - checkout
      - run:
          name: Restore packages
          working_directory: ~/project/src/DotNetCoreHelloFromAppSettings
          command: dotnet restore
      - run:
          name: Build App
          working_directory: ~/project/src/DotNetCoreHelloFromAppSettings
          command: dotnet publish
      - run:
          name: Run App
          working_directory: ~/project/src/DotNetCoreHelloFromAppSettings
          background: true
          command: dotnet run
      - run:
          name: Run Unit Tests
          working_directory: ~/project/src/UnitTestProject
          command: dotnet test
      - persist_to_workspace:
              root: .
              paths:
                - Dockerfile
                - reconfiguration_script.sh
                - src/DotNetCoreHelloFromAppSettings/bin/Debug/netcoreapp2.0
  build-image:
    environment:
      IMAGE_NAME: zeitler/circleci-ci-sample
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
  deploy-image:
    environment:
      IMAGE_NAME: zeitler/circleci-ci-sample
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a4:81:9d:74:f0:0a:a9:3c:ce:26:f4:ad:a0:58:ea:f2"
      - run:
          name: Login to EC2 instance & pull docker image
          #background: true
          command: |
            ssh -o "StrictHostKeyChecking no" ec2-user@ec2-54-91-146-135.compute-1.amazonaws.com << EOF
              docker pull $IMAGE_NAME:latest
              docker run -e HelloValue="Fuck this shit!" -it $IMAGE_NAME:latest
            EOF
workflows:
  version: 2
  build-master:
    jobs:
      - build-app
      - build-image:
          context: dockerhub
          requires:
            - build-app
      - deploy-image:
          requires:
            - build-image
